
CartelFarmacia.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000760  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006ec  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800100  00800100  00000760  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000760  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000790  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  000007d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018ce  00000000  00000000  000008d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ac7  00000000  00000000  0000219e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a97  00000000  00000000  00002c65  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000244  00000000  00000000  000036fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007b1  00000000  00000000  00003940  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000954  00000000  00000000  000040f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00004a45  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__ctors_end>
   4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
   8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
   c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  10:	0c 94 75 00 	jmp	0xea	; 0xea <__vector_4>
  14:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  18:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  1c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  20:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  24:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  28:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  2c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  34:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  38:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  3c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  40:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__vector_16>
  44:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  48:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  4c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  50:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  54:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  58:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  5c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  60:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  64:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 00       	nop
  6a:	00 08       	sbc	r0, r0
  6c:	00 02       	muls	r16, r16
  6e:	01 00       	.word	0x0001	; ????
  70:	00 03       	mulsu	r16, r16
  72:	04 07       	cpc	r16, r20
	...

0000007c <digital_pin_to_bit_mask_PGM>:
  7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
  8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
  90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
  a0:	03 03 03 03                                         ....

000000a4 <port_to_input_PGM>:
  a4:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

000000ae <port_to_output_PGM>:
  ae:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000b8 <port_to_mode_PGM>:
  b8:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000c2 <__ctors_end>:
  c2:	11 24       	eor	r1, r1
  c4:	1f be       	out	0x3f, r1	; 63
  c6:	cf ef       	ldi	r28, 0xFF	; 255
  c8:	d8 e0       	ldi	r29, 0x08	; 8
  ca:	de bf       	out	0x3e, r29	; 62
  cc:	cd bf       	out	0x3d, r28	; 61

000000ce <__do_clear_bss>:
  ce:	21 e0       	ldi	r18, 0x01	; 1
  d0:	a0 e0       	ldi	r26, 0x00	; 0
  d2:	b1 e0       	ldi	r27, 0x01	; 1
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
  d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
  d8:	aa 30       	cpi	r26, 0x0A	; 10
  da:	b2 07       	cpc	r27, r18
  dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
  de:	0e 94 c1 01 	call	0x382	; 0x382 <main>
  e2:	0c 94 74 03 	jmp	0x6e8	; 0x6e8 <_exit>

000000e6 <__bad_interrupt>:
  e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ea <__vector_4>:
const int D3 = 17;	//DataIn3	(A3)



ISR (PCINT1_vect) // Interrupciones por cambio en las entradas del control remoto
{
  ea:	1f 92       	push	r1
  ec:	0f 92       	push	r0
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	0f 92       	push	r0
  f2:	11 24       	eor	r1, r1
  f4:	2f 93       	push	r18
  f6:	3f 93       	push	r19
  f8:	4f 93       	push	r20
  fa:	5f 93       	push	r21
  fc:	6f 93       	push	r22
  fe:	7f 93       	push	r23
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
 104:	af 93       	push	r26
 106:	bf 93       	push	r27
 108:	ef 93       	push	r30
 10a:	ff 93       	push	r31
	delay(500);		//Antirrebote
 10c:	64 ef       	ldi	r22, 0xF4	; 244
 10e:	71 e0       	ldi	r23, 0x01	; 1
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
	if(digitalRead(D0)==1){	//D0 cambia el modo al siguiente
 118:	8e e0       	ldi	r24, 0x0E	; 14
 11a:	0e 94 4a 03 	call	0x694	; 0x694 <digitalRead>
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	81 f4       	brne	.+32     	; 0x142 <__vector_4+0x58>
		modo++;
 122:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 126:	8f 5f       	subi	r24, 0xFF	; 255
		if(modo>3){modo=0;}
 128:	84 30       	cpi	r24, 0x04	; 4
 12a:	18 f4       	brcc	.+6      	; 0x132 <__vector_4+0x48>

ISR (PCINT1_vect) // Interrupciones por cambio en las entradas del control remoto
{
	delay(500);		//Antirrebote
	if(digitalRead(D0)==1){	//D0 cambia el modo al siguiente
		modo++;
 12c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 130:	02 c0       	rjmp	.+4      	; 0x136 <__vector_4+0x4c>
		if(modo>3){modo=0;}
 132:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		while(digitalRead(D0));	//Espera a que se suelte el boton
 136:	8e e0       	ldi	r24, 0x0E	; 14
 138:	0e 94 4a 03 	call	0x694	; 0x694 <digitalRead>
 13c:	89 2b       	or	r24, r25
 13e:	d9 f7       	brne	.-10     	; 0x136 <__vector_4+0x4c>
 140:	2f c0       	rjmp	.+94     	; 0x1a0 <__vector_4+0xb6>
		//PCIFR=0;				//Limpia la bandera para no volver a entrar en la interrupcion
	}
	else if(digitalRead(D2)==1){	//D2 cambia el modo hacia atras
 142:	80 e1       	ldi	r24, 0x10	; 16
 144:	0e 94 4a 03 	call	0x694	; 0x694 <digitalRead>
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	69 f4       	brne	.+26     	; 0x166 <__vector_4+0x7c>
		modo--;
 14c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 150:	81 50       	subi	r24, 0x01	; 1
 152:	08 f4       	brcc	.+2      	; 0x156 <__vector_4+0x6c>
		if (modo==255){modo=3;}
 154:	83 e0       	ldi	r24, 0x03	; 3
 156:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
		while(digitalRead(D2));	//Espera a que se suelte el boton
 15a:	80 e1       	ldi	r24, 0x10	; 16
 15c:	0e 94 4a 03 	call	0x694	; 0x694 <digitalRead>
 160:	89 2b       	or	r24, r25
 162:	d9 f7       	brne	.-10     	; 0x15a <__vector_4+0x70>
 164:	1d c0       	rjmp	.+58     	; 0x1a0 <__vector_4+0xb6>
		//PCIFR=0;				//Limpia la bandera para no volver a entrar en la interrupcion
	}
	else if(digitalRead(D1)==1){	//D1 enciende el mensaje "En turno"
 166:	8f e0       	ldi	r24, 0x0F	; 15
 168:	0e 94 4a 03 	call	0x694	; 0x694 <digitalRead>
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	51 f4       	brne	.+20     	; 0x184 <__vector_4+0x9a>
		digitalWrite(turno,HIGH);
 170:	61 e0       	ldi	r22, 0x01	; 1
 172:	8b e0       	ldi	r24, 0x0B	; 11
 174:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
		while(digitalRead(D1));	//Espera a que se suelte el boton
 178:	8f e0       	ldi	r24, 0x0F	; 15
 17a:	0e 94 4a 03 	call	0x694	; 0x694 <digitalRead>
 17e:	89 2b       	or	r24, r25
 180:	d9 f7       	brne	.-10     	; 0x178 <__vector_4+0x8e>
 182:	0e c0       	rjmp	.+28     	; 0x1a0 <__vector_4+0xb6>
		//PCIFR=0;				//Limpia la bandera para no volver a entrar en la interrupcion
	}
	else if(digitalRead(D3)==1){	//D3 apaga el mensaje "En turno"
 184:	81 e1       	ldi	r24, 0x11	; 17
 186:	0e 94 4a 03 	call	0x694	; 0x694 <digitalRead>
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	49 f4       	brne	.+18     	; 0x1a0 <__vector_4+0xb6>
		digitalWrite(turno,LOW);
 18e:	60 e0       	ldi	r22, 0x00	; 0
 190:	8b e0       	ldi	r24, 0x0B	; 11
 192:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
		while(digitalRead(D3));	//Espera a que se suelte el boton
 196:	81 e1       	ldi	r24, 0x11	; 17
 198:	0e 94 4a 03 	call	0x694	; 0x694 <digitalRead>
 19c:	89 2b       	or	r24, r25
 19e:	d9 f7       	brne	.-10     	; 0x196 <__vector_4+0xac>
		//PCIFR=0;				//Limpia la bandera para no volver a entrar en la interrupcion
	}
	
}
 1a0:	ff 91       	pop	r31
 1a2:	ef 91       	pop	r30
 1a4:	bf 91       	pop	r27
 1a6:	af 91       	pop	r26
 1a8:	9f 91       	pop	r25
 1aa:	8f 91       	pop	r24
 1ac:	7f 91       	pop	r23
 1ae:	6f 91       	pop	r22
 1b0:	5f 91       	pop	r21
 1b2:	4f 91       	pop	r20
 1b4:	3f 91       	pop	r19
 1b6:	2f 91       	pop	r18
 1b8:	0f 90       	pop	r0
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	0f 90       	pop	r0
 1be:	1f 90       	pop	r1
 1c0:	18 95       	reti

000001c2 <setup>:



void setup() {
	//GPIO
	pinMode(cruz1,OUTPUT);
 1c2:	61 e0       	ldi	r22, 0x01	; 1
 1c4:	85 e0       	ldi	r24, 0x05	; 5
 1c6:	0e 94 df 02 	call	0x5be	; 0x5be <pinMode>
	pinMode(cruz2,OUTPUT);
 1ca:	61 e0       	ldi	r22, 0x01	; 1
 1cc:	86 e0       	ldi	r24, 0x06	; 6
 1ce:	0e 94 df 02 	call	0x5be	; 0x5be <pinMode>
	pinMode(circ,OUTPUT);
 1d2:	61 e0       	ldi	r22, 0x01	; 1
 1d4:	83 e0       	ldi	r24, 0x03	; 3
 1d6:	0e 94 df 02 	call	0x5be	; 0x5be <pinMode>
	pinMode(turno,OUTPUT);
 1da:	61 e0       	ldi	r22, 0x01	; 1
 1dc:	8b e0       	ldi	r24, 0x0B	; 11
 1de:	0e 94 df 02 	call	0x5be	; 0x5be <pinMode>
	
	pinMode(D0,INPUT);
 1e2:	60 e0       	ldi	r22, 0x00	; 0
 1e4:	8e e0       	ldi	r24, 0x0E	; 14
 1e6:	0e 94 df 02 	call	0x5be	; 0x5be <pinMode>
	pinMode(D1,INPUT);
 1ea:	60 e0       	ldi	r22, 0x00	; 0
 1ec:	8f e0       	ldi	r24, 0x0F	; 15
 1ee:	0e 94 df 02 	call	0x5be	; 0x5be <pinMode>
	pinMode(D2,INPUT);
 1f2:	60 e0       	ldi	r22, 0x00	; 0
 1f4:	80 e1       	ldi	r24, 0x10	; 16
 1f6:	0e 94 df 02 	call	0x5be	; 0x5be <pinMode>
	pinMode(D3,INPUT);
 1fa:	60 e0       	ldi	r22, 0x00	; 0
 1fc:	81 e1       	ldi	r24, 0x11	; 17
 1fe:	0e 94 df 02 	call	0x5be	; 0x5be <pinMode>
	
	//Interrupciones
	PCIFR = 0;	//Baja todas las banderas de interrupcion
 202:	1b ba       	out	0x1b, r1	; 27
	PCICR = 0x02;	//Habilita las interrupciones por cambio desde A0 a A5
 204:	82 e0       	ldi	r24, 0x02	; 2
 206:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
	PCMSK1 = 0x0F;	//Habilita las interrupciones de A0:A4
 20a:	8f e0       	ldi	r24, 0x0F	; 15
 20c:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
	
	
	
	digitalWrite(cruz1,LOW);
 210:	60 e0       	ldi	r22, 0x00	; 0
 212:	85 e0       	ldi	r24, 0x05	; 5
 214:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
	digitalWrite(cruz2,LOW);
 218:	60 e0       	ldi	r22, 0x00	; 0
 21a:	86 e0       	ldi	r24, 0x06	; 6
 21c:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
	digitalWrite(circ,LOW);
 220:	60 e0       	ldi	r22, 0x00	; 0
 222:	83 e0       	ldi	r24, 0x03	; 3
 224:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
	digitalWrite(turno,LOW);
 228:	60 e0       	ldi	r22, 0x00	; 0
 22a:	8b e0       	ldi	r24, 0x0B	; 11
 22c:	0c 94 1b 03 	jmp	0x636	; 0x636 <digitalWrite>

00000230 <loop>:
}

void loop() {
	switch(modo){
 230:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	a1 f0       	breq	.+40     	; 0x260 <loop+0x30>
 238:	38 f0       	brcs	.+14     	; 0x248 <loop+0x18>
 23a:	82 30       	cpi	r24, 0x02	; 2
 23c:	09 f4       	brne	.+2      	; 0x240 <loop+0x10>
 23e:	45 c0       	rjmp	.+138    	; 0x2ca <loop+0x9a>
 240:	83 30       	cpi	r24, 0x03	; 3
 242:	09 f4       	brne	.+2      	; 0x246 <loop+0x16>
 244:	7d c0       	rjmp	.+250    	; 0x340 <loop+0x110>
 246:	08 95       	ret
		case 0:
			digitalWrite(circ,HIGH);
 248:	61 e0       	ldi	r22, 0x01	; 1
 24a:	83 e0       	ldi	r24, 0x03	; 3
 24c:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			digitalWrite(cruz1,HIGH);
 250:	61 e0       	ldi	r22, 0x01	; 1
 252:	85 e0       	ldi	r24, 0x05	; 5
 254:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			digitalWrite(cruz2,HIGH);
 258:	61 e0       	ldi	r22, 0x01	; 1
 25a:	86 e0       	ldi	r24, 0x06	; 6
 25c:	0c 94 1b 03 	jmp	0x636	; 0x636 <digitalWrite>
		break;
		
		case 1:
			digitalWrite(cruz1,HIGH);
 260:	61 e0       	ldi	r22, 0x01	; 1
 262:	85 e0       	ldi	r24, 0x05	; 5
 264:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(500);
 268:	64 ef       	ldi	r22, 0xF4	; 244
 26a:	71 e0       	ldi	r23, 0x01	; 1
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
			digitalWrite(cruz2,HIGH);
 274:	61 e0       	ldi	r22, 0x01	; 1
 276:	86 e0       	ldi	r24, 0x06	; 6
 278:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(500);
 27c:	64 ef       	ldi	r22, 0xF4	; 244
 27e:	71 e0       	ldi	r23, 0x01	; 1
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
			digitalWrite(circ,HIGH);
 288:	61 e0       	ldi	r22, 0x01	; 1
 28a:	83 e0       	ldi	r24, 0x03	; 3
 28c:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(500);
 290:	64 ef       	ldi	r22, 0xF4	; 244
 292:	71 e0       	ldi	r23, 0x01	; 1
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
		
			digitalWrite(cruz1,LOW);
 29c:	60 e0       	ldi	r22, 0x00	; 0
 29e:	85 e0       	ldi	r24, 0x05	; 5
 2a0:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(500);
 2a4:	64 ef       	ldi	r22, 0xF4	; 244
 2a6:	71 e0       	ldi	r23, 0x01	; 1
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
			digitalWrite(cruz2,LOW);
 2b0:	60 e0       	ldi	r22, 0x00	; 0
 2b2:	86 e0       	ldi	r24, 0x06	; 6
 2b4:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(500);
 2b8:	64 ef       	ldi	r22, 0xF4	; 244
 2ba:	71 e0       	ldi	r23, 0x01	; 1
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
			digitalWrite(circ,LOW);
 2c4:	60 e0       	ldi	r22, 0x00	; 0
 2c6:	83 e0       	ldi	r24, 0x03	; 3
 2c8:	53 c0       	rjmp	.+166    	; 0x370 <loop+0x140>
			delay(500);
			break;
		
		case 2:
			digitalWrite(cruz1,HIGH);
 2ca:	61 e0       	ldi	r22, 0x01	; 1
 2cc:	85 e0       	ldi	r24, 0x05	; 5
 2ce:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(200);
 2d2:	68 ec       	ldi	r22, 0xC8	; 200
 2d4:	70 e0       	ldi	r23, 0x00	; 0
 2d6:	80 e0       	ldi	r24, 0x00	; 0
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
			digitalWrite(cruz2,HIGH);
 2de:	61 e0       	ldi	r22, 0x01	; 1
 2e0:	86 e0       	ldi	r24, 0x06	; 6
 2e2:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(200);
 2e6:	68 ec       	ldi	r22, 0xC8	; 200
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
			digitalWrite(circ,HIGH);
 2f2:	61 e0       	ldi	r22, 0x01	; 1
 2f4:	83 e0       	ldi	r24, 0x03	; 3
 2f6:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(200);
 2fa:	68 ec       	ldi	r22, 0xC8	; 200
 2fc:	70 e0       	ldi	r23, 0x00	; 0
 2fe:	80 e0       	ldi	r24, 0x00	; 0
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
		
			digitalWrite(cruz1,LOW);
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	85 e0       	ldi	r24, 0x05	; 5
 30a:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(200);
 30e:	68 ec       	ldi	r22, 0xC8	; 200
 310:	70 e0       	ldi	r23, 0x00	; 0
 312:	80 e0       	ldi	r24, 0x00	; 0
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
			digitalWrite(cruz2,LOW);
 31a:	60 e0       	ldi	r22, 0x00	; 0
 31c:	86 e0       	ldi	r24, 0x06	; 6
 31e:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(200);
 322:	68 ec       	ldi	r22, 0xC8	; 200
 324:	70 e0       	ldi	r23, 0x00	; 0
 326:	80 e0       	ldi	r24, 0x00	; 0
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
			digitalWrite(circ,LOW);
 32e:	60 e0       	ldi	r22, 0x00	; 0
 330:	83 e0       	ldi	r24, 0x03	; 3
 332:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(200);
 336:	68 ec       	ldi	r22, 0xC8	; 200
 338:	70 e0       	ldi	r23, 0x00	; 0
 33a:	80 e0       	ldi	r24, 0x00	; 0
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	1e c0       	rjmp	.+60     	; 0x37c <loop+0x14c>
			break;
		
		case 3:
			digitalWrite(circ,HIGH);
 340:	61 e0       	ldi	r22, 0x01	; 1
 342:	83 e0       	ldi	r24, 0x03	; 3
 344:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			digitalWrite(cruz1,HIGH);
 348:	61 e0       	ldi	r22, 0x01	; 1
 34a:	85 e0       	ldi	r24, 0x05	; 5
 34c:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			digitalWrite(cruz2,HIGH);
 350:	61 e0       	ldi	r22, 0x01	; 1
 352:	86 e0       	ldi	r24, 0x06	; 6
 354:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(500);
 358:	64 ef       	ldi	r22, 0xF4	; 244
 35a:	71 e0       	ldi	r23, 0x01	; 1
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	0e 94 3f 02 	call	0x47e	; 0x47e <delay>
			
			digitalWrite(cruz1,LOW);
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	85 e0       	ldi	r24, 0x05	; 5
 368:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			digitalWrite(cruz2,LOW);
 36c:	60 e0       	ldi	r22, 0x00	; 0
 36e:	86 e0       	ldi	r24, 0x06	; 6
 370:	0e 94 1b 03 	call	0x636	; 0x636 <digitalWrite>
			delay(500);
 374:	64 ef       	ldi	r22, 0xF4	; 244
 376:	71 e0       	ldi	r23, 0x01	; 1
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0c 94 3f 02 	jmp	0x47e	; 0x47e <delay>

00000380 <initVariant>:
 380:	08 95       	ret

00000382 <main>:
 382:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <init>
 386:	0e 94 c0 01 	call	0x380	; 0x380 <initVariant>
 38a:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <setup>
 38e:	c0 e0       	ldi	r28, 0x00	; 0
 390:	d0 e0       	ldi	r29, 0x00	; 0
 392:	0e 94 18 01 	call	0x230	; 0x230 <loop>
 396:	20 97       	sbiw	r28, 0x00	; 0
 398:	e1 f3       	breq	.-8      	; 0x392 <main+0x10>
 39a:	0e 94 00 00 	call	0	; 0x0 <__vectors>
 39e:	f9 cf       	rjmp	.-14     	; 0x392 <main+0x10>

000003a0 <__vector_16>:
 3a0:	1f 92       	push	r1
 3a2:	0f 92       	push	r0
 3a4:	0f b6       	in	r0, 0x3f	; 63
 3a6:	0f 92       	push	r0
 3a8:	11 24       	eor	r1, r1
 3aa:	2f 93       	push	r18
 3ac:	3f 93       	push	r19
 3ae:	8f 93       	push	r24
 3b0:	9f 93       	push	r25
 3b2:	af 93       	push	r26
 3b4:	bf 93       	push	r27
 3b6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <timer0_millis>
 3ba:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <timer0_millis+0x1>
 3be:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <timer0_millis+0x2>
 3c2:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <timer0_millis+0x3>
 3c6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <timer0_fract>
 3ca:	23 e0       	ldi	r18, 0x03	; 3
 3cc:	23 0f       	add	r18, r19
 3ce:	2d 37       	cpi	r18, 0x7D	; 125
 3d0:	20 f4       	brcc	.+8      	; 0x3da <__vector_16+0x3a>
 3d2:	01 96       	adiw	r24, 0x01	; 1
 3d4:	a1 1d       	adc	r26, r1
 3d6:	b1 1d       	adc	r27, r1
 3d8:	05 c0       	rjmp	.+10     	; 0x3e4 <__vector_16+0x44>
 3da:	26 e8       	ldi	r18, 0x86	; 134
 3dc:	23 0f       	add	r18, r19
 3de:	02 96       	adiw	r24, 0x02	; 2
 3e0:	a1 1d       	adc	r26, r1
 3e2:	b1 1d       	adc	r27, r1
 3e4:	20 93 01 01 	sts	0x0101, r18	; 0x800101 <timer0_fract>
 3e8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <timer0_millis>
 3ec:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <timer0_millis+0x1>
 3f0:	a0 93 04 01 	sts	0x0104, r26	; 0x800104 <timer0_millis+0x2>
 3f4:	b0 93 05 01 	sts	0x0105, r27	; 0x800105 <timer0_millis+0x3>
 3f8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timer0_overflow_count>
 3fc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timer0_overflow_count+0x1>
 400:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <timer0_overflow_count+0x2>
 404:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <timer0_overflow_count+0x3>
 408:	01 96       	adiw	r24, 0x01	; 1
 40a:	a1 1d       	adc	r26, r1
 40c:	b1 1d       	adc	r27, r1
 40e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <timer0_overflow_count>
 412:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <timer0_overflow_count+0x1>
 416:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <timer0_overflow_count+0x2>
 41a:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <timer0_overflow_count+0x3>
 41e:	bf 91       	pop	r27
 420:	af 91       	pop	r26
 422:	9f 91       	pop	r25
 424:	8f 91       	pop	r24
 426:	3f 91       	pop	r19
 428:	2f 91       	pop	r18
 42a:	0f 90       	pop	r0
 42c:	0f be       	out	0x3f, r0	; 63
 42e:	0f 90       	pop	r0
 430:	1f 90       	pop	r1
 432:	18 95       	reti

00000434 <micros>:
 434:	3f b7       	in	r19, 0x3f	; 63
 436:	f8 94       	cli
 438:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timer0_overflow_count>
 43c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timer0_overflow_count+0x1>
 440:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <timer0_overflow_count+0x2>
 444:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <timer0_overflow_count+0x3>
 448:	26 b5       	in	r18, 0x26	; 38
 44a:	a8 9b       	sbis	0x15, 0	; 21
 44c:	05 c0       	rjmp	.+10     	; 0x458 <micros+0x24>
 44e:	2f 3f       	cpi	r18, 0xFF	; 255
 450:	19 f0       	breq	.+6      	; 0x458 <micros+0x24>
 452:	01 96       	adiw	r24, 0x01	; 1
 454:	a1 1d       	adc	r26, r1
 456:	b1 1d       	adc	r27, r1
 458:	3f bf       	out	0x3f, r19	; 63
 45a:	ba 2f       	mov	r27, r26
 45c:	a9 2f       	mov	r26, r25
 45e:	98 2f       	mov	r25, r24
 460:	88 27       	eor	r24, r24
 462:	82 0f       	add	r24, r18
 464:	91 1d       	adc	r25, r1
 466:	a1 1d       	adc	r26, r1
 468:	b1 1d       	adc	r27, r1
 46a:	bc 01       	movw	r22, r24
 46c:	cd 01       	movw	r24, r26
 46e:	42 e0       	ldi	r20, 0x02	; 2
 470:	66 0f       	add	r22, r22
 472:	77 1f       	adc	r23, r23
 474:	88 1f       	adc	r24, r24
 476:	99 1f       	adc	r25, r25
 478:	4a 95       	dec	r20
 47a:	d1 f7       	brne	.-12     	; 0x470 <micros+0x3c>
 47c:	08 95       	ret

0000047e <delay>:
 47e:	8f 92       	push	r8
 480:	9f 92       	push	r9
 482:	af 92       	push	r10
 484:	bf 92       	push	r11
 486:	cf 92       	push	r12
 488:	df 92       	push	r13
 48a:	ef 92       	push	r14
 48c:	ff 92       	push	r15
 48e:	6b 01       	movw	r12, r22
 490:	7c 01       	movw	r14, r24
 492:	0e 94 1a 02 	call	0x434	; 0x434 <micros>
 496:	4b 01       	movw	r8, r22
 498:	5c 01       	movw	r10, r24
 49a:	c1 14       	cp	r12, r1
 49c:	d1 04       	cpc	r13, r1
 49e:	e1 04       	cpc	r14, r1
 4a0:	f1 04       	cpc	r15, r1
 4a2:	01 f1       	breq	.+64     	; 0x4e4 <delay+0x66>
 4a4:	0e 94 73 03 	call	0x6e6	; 0x6e6 <yield>
 4a8:	0e 94 1a 02 	call	0x434	; 0x434 <micros>
 4ac:	dc 01       	movw	r26, r24
 4ae:	cb 01       	movw	r24, r22
 4b0:	88 19       	sub	r24, r8
 4b2:	99 09       	sbc	r25, r9
 4b4:	aa 09       	sbc	r26, r10
 4b6:	bb 09       	sbc	r27, r11
 4b8:	88 3e       	cpi	r24, 0xE8	; 232
 4ba:	93 40       	sbci	r25, 0x03	; 3
 4bc:	a1 05       	cpc	r26, r1
 4be:	b1 05       	cpc	r27, r1
 4c0:	60 f3       	brcs	.-40     	; 0x49a <delay+0x1c>
 4c2:	21 e0       	ldi	r18, 0x01	; 1
 4c4:	c2 1a       	sub	r12, r18
 4c6:	d1 08       	sbc	r13, r1
 4c8:	e1 08       	sbc	r14, r1
 4ca:	f1 08       	sbc	r15, r1
 4cc:	88 ee       	ldi	r24, 0xE8	; 232
 4ce:	88 0e       	add	r8, r24
 4d0:	83 e0       	ldi	r24, 0x03	; 3
 4d2:	98 1e       	adc	r9, r24
 4d4:	a1 1c       	adc	r10, r1
 4d6:	b1 1c       	adc	r11, r1
 4d8:	c1 14       	cp	r12, r1
 4da:	d1 04       	cpc	r13, r1
 4dc:	e1 04       	cpc	r14, r1
 4de:	f1 04       	cpc	r15, r1
 4e0:	19 f7       	brne	.-58     	; 0x4a8 <delay+0x2a>
 4e2:	db cf       	rjmp	.-74     	; 0x49a <delay+0x1c>
 4e4:	ff 90       	pop	r15
 4e6:	ef 90       	pop	r14
 4e8:	df 90       	pop	r13
 4ea:	cf 90       	pop	r12
 4ec:	bf 90       	pop	r11
 4ee:	af 90       	pop	r10
 4f0:	9f 90       	pop	r9
 4f2:	8f 90       	pop	r8
 4f4:	08 95       	ret

000004f6 <init>:
 4f6:	78 94       	sei
 4f8:	84 b5       	in	r24, 0x24	; 36
 4fa:	82 60       	ori	r24, 0x02	; 2
 4fc:	84 bd       	out	0x24, r24	; 36
 4fe:	84 b5       	in	r24, 0x24	; 36
 500:	81 60       	ori	r24, 0x01	; 1
 502:	84 bd       	out	0x24, r24	; 36
 504:	85 b5       	in	r24, 0x25	; 37
 506:	82 60       	ori	r24, 0x02	; 2
 508:	85 bd       	out	0x25, r24	; 37
 50a:	85 b5       	in	r24, 0x25	; 37
 50c:	81 60       	ori	r24, 0x01	; 1
 50e:	85 bd       	out	0x25, r24	; 37
 510:	ee e6       	ldi	r30, 0x6E	; 110
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	80 81       	ld	r24, Z
 516:	81 60       	ori	r24, 0x01	; 1
 518:	80 83       	st	Z, r24
 51a:	e1 e8       	ldi	r30, 0x81	; 129
 51c:	f0 e0       	ldi	r31, 0x00	; 0
 51e:	10 82       	st	Z, r1
 520:	80 81       	ld	r24, Z
 522:	82 60       	ori	r24, 0x02	; 2
 524:	80 83       	st	Z, r24
 526:	80 81       	ld	r24, Z
 528:	81 60       	ori	r24, 0x01	; 1
 52a:	80 83       	st	Z, r24
 52c:	e0 e8       	ldi	r30, 0x80	; 128
 52e:	f0 e0       	ldi	r31, 0x00	; 0
 530:	80 81       	ld	r24, Z
 532:	81 60       	ori	r24, 0x01	; 1
 534:	80 83       	st	Z, r24
 536:	e1 eb       	ldi	r30, 0xB1	; 177
 538:	f0 e0       	ldi	r31, 0x00	; 0
 53a:	80 81       	ld	r24, Z
 53c:	84 60       	ori	r24, 0x04	; 4
 53e:	80 83       	st	Z, r24
 540:	e0 eb       	ldi	r30, 0xB0	; 176
 542:	f0 e0       	ldi	r31, 0x00	; 0
 544:	80 81       	ld	r24, Z
 546:	81 60       	ori	r24, 0x01	; 1
 548:	80 83       	st	Z, r24
 54a:	ea e7       	ldi	r30, 0x7A	; 122
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	80 81       	ld	r24, Z
 550:	84 60       	ori	r24, 0x04	; 4
 552:	80 83       	st	Z, r24
 554:	80 81       	ld	r24, Z
 556:	82 60       	ori	r24, 0x02	; 2
 558:	80 83       	st	Z, r24
 55a:	80 81       	ld	r24, Z
 55c:	81 60       	ori	r24, 0x01	; 1
 55e:	80 83       	st	Z, r24
 560:	80 81       	ld	r24, Z
 562:	80 68       	ori	r24, 0x80	; 128
 564:	80 83       	st	Z, r24
 566:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 56a:	08 95       	ret

0000056c <turnOffPWM>:
 56c:	83 30       	cpi	r24, 0x03	; 3
 56e:	81 f0       	breq	.+32     	; 0x590 <turnOffPWM+0x24>
 570:	28 f4       	brcc	.+10     	; 0x57c <turnOffPWM+0x10>
 572:	81 30       	cpi	r24, 0x01	; 1
 574:	99 f0       	breq	.+38     	; 0x59c <turnOffPWM+0x30>
 576:	82 30       	cpi	r24, 0x02	; 2
 578:	a1 f0       	breq	.+40     	; 0x5a2 <turnOffPWM+0x36>
 57a:	08 95       	ret
 57c:	87 30       	cpi	r24, 0x07	; 7
 57e:	a9 f0       	breq	.+42     	; 0x5aa <turnOffPWM+0x3e>
 580:	88 30       	cpi	r24, 0x08	; 8
 582:	b9 f0       	breq	.+46     	; 0x5b2 <turnOffPWM+0x46>
 584:	84 30       	cpi	r24, 0x04	; 4
 586:	d1 f4       	brne	.+52     	; 0x5bc <turnOffPWM+0x50>
 588:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 58c:	8f 7d       	andi	r24, 0xDF	; 223
 58e:	03 c0       	rjmp	.+6      	; 0x596 <turnOffPWM+0x2a>
 590:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 594:	8f 77       	andi	r24, 0x7F	; 127
 596:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 59a:	08 95       	ret
 59c:	84 b5       	in	r24, 0x24	; 36
 59e:	8f 77       	andi	r24, 0x7F	; 127
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <turnOffPWM+0x3a>
 5a2:	84 b5       	in	r24, 0x24	; 36
 5a4:	8f 7d       	andi	r24, 0xDF	; 223
 5a6:	84 bd       	out	0x24, r24	; 36
 5a8:	08 95       	ret
 5aa:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 5ae:	8f 77       	andi	r24, 0x7F	; 127
 5b0:	03 c0       	rjmp	.+6      	; 0x5b8 <turnOffPWM+0x4c>
 5b2:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 5b6:	8f 7d       	andi	r24, 0xDF	; 223
 5b8:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 5bc:	08 95       	ret

000005be <pinMode>:
 5be:	cf 93       	push	r28
 5c0:	df 93       	push	r29
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	fc 01       	movw	r30, r24
 5c6:	e4 58       	subi	r30, 0x84	; 132
 5c8:	ff 4f       	sbci	r31, 0xFF	; 255
 5ca:	24 91       	lpm	r18, Z
 5cc:	fc 01       	movw	r30, r24
 5ce:	e0 57       	subi	r30, 0x70	; 112
 5d0:	ff 4f       	sbci	r31, 0xFF	; 255
 5d2:	84 91       	lpm	r24, Z
 5d4:	88 23       	and	r24, r24
 5d6:	61 f1       	breq	.+88     	; 0x630 <pinMode+0x72>
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	88 0f       	add	r24, r24
 5dc:	99 1f       	adc	r25, r25
 5de:	fc 01       	movw	r30, r24
 5e0:	e8 54       	subi	r30, 0x48	; 72
 5e2:	ff 4f       	sbci	r31, 0xFF	; 255
 5e4:	c5 91       	lpm	r28, Z+
 5e6:	d4 91       	lpm	r29, Z
 5e8:	fc 01       	movw	r30, r24
 5ea:	e2 55       	subi	r30, 0x52	; 82
 5ec:	ff 4f       	sbci	r31, 0xFF	; 255
 5ee:	a5 91       	lpm	r26, Z+
 5f0:	b4 91       	lpm	r27, Z
 5f2:	61 11       	cpse	r22, r1
 5f4:	09 c0       	rjmp	.+18     	; 0x608 <pinMode+0x4a>
 5f6:	9f b7       	in	r25, 0x3f	; 63
 5f8:	f8 94       	cli
 5fa:	88 81       	ld	r24, Y
 5fc:	20 95       	com	r18
 5fe:	82 23       	and	r24, r18
 600:	88 83       	st	Y, r24
 602:	ec 91       	ld	r30, X
 604:	2e 23       	and	r18, r30
 606:	0b c0       	rjmp	.+22     	; 0x61e <pinMode+0x60>
 608:	62 30       	cpi	r22, 0x02	; 2
 60a:	61 f4       	brne	.+24     	; 0x624 <pinMode+0x66>
 60c:	9f b7       	in	r25, 0x3f	; 63
 60e:	f8 94       	cli
 610:	88 81       	ld	r24, Y
 612:	32 2f       	mov	r19, r18
 614:	30 95       	com	r19
 616:	83 23       	and	r24, r19
 618:	88 83       	st	Y, r24
 61a:	ec 91       	ld	r30, X
 61c:	2e 2b       	or	r18, r30
 61e:	2c 93       	st	X, r18
 620:	9f bf       	out	0x3f, r25	; 63
 622:	06 c0       	rjmp	.+12     	; 0x630 <pinMode+0x72>
 624:	8f b7       	in	r24, 0x3f	; 63
 626:	f8 94       	cli
 628:	e8 81       	ld	r30, Y
 62a:	2e 2b       	or	r18, r30
 62c:	28 83       	st	Y, r18
 62e:	8f bf       	out	0x3f, r24	; 63
 630:	df 91       	pop	r29
 632:	cf 91       	pop	r28
 634:	08 95       	ret

00000636 <digitalWrite>:
 636:	1f 93       	push	r17
 638:	cf 93       	push	r28
 63a:	df 93       	push	r29
 63c:	28 2f       	mov	r18, r24
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	f9 01       	movw	r30, r18
 642:	e8 59       	subi	r30, 0x98	; 152
 644:	ff 4f       	sbci	r31, 0xFF	; 255
 646:	84 91       	lpm	r24, Z
 648:	f9 01       	movw	r30, r18
 64a:	e4 58       	subi	r30, 0x84	; 132
 64c:	ff 4f       	sbci	r31, 0xFF	; 255
 64e:	d4 91       	lpm	r29, Z
 650:	f9 01       	movw	r30, r18
 652:	e0 57       	subi	r30, 0x70	; 112
 654:	ff 4f       	sbci	r31, 0xFF	; 255
 656:	c4 91       	lpm	r28, Z
 658:	cc 23       	and	r28, r28
 65a:	c1 f0       	breq	.+48     	; 0x68c <digitalWrite+0x56>
 65c:	16 2f       	mov	r17, r22
 65e:	81 11       	cpse	r24, r1
 660:	0e 94 b6 02 	call	0x56c	; 0x56c <turnOffPWM>
 664:	ec 2f       	mov	r30, r28
 666:	f0 e0       	ldi	r31, 0x00	; 0
 668:	ee 0f       	add	r30, r30
 66a:	ff 1f       	adc	r31, r31
 66c:	e2 55       	subi	r30, 0x52	; 82
 66e:	ff 4f       	sbci	r31, 0xFF	; 255
 670:	a5 91       	lpm	r26, Z+
 672:	b4 91       	lpm	r27, Z
 674:	9f b7       	in	r25, 0x3f	; 63
 676:	f8 94       	cli
 678:	11 11       	cpse	r17, r1
 67a:	04 c0       	rjmp	.+8      	; 0x684 <digitalWrite+0x4e>
 67c:	8c 91       	ld	r24, X
 67e:	d0 95       	com	r29
 680:	d8 23       	and	r29, r24
 682:	02 c0       	rjmp	.+4      	; 0x688 <digitalWrite+0x52>
 684:	ec 91       	ld	r30, X
 686:	de 2b       	or	r29, r30
 688:	dc 93       	st	X, r29
 68a:	9f bf       	out	0x3f, r25	; 63
 68c:	df 91       	pop	r29
 68e:	cf 91       	pop	r28
 690:	1f 91       	pop	r17
 692:	08 95       	ret

00000694 <digitalRead>:
 694:	cf 93       	push	r28
 696:	df 93       	push	r29
 698:	28 2f       	mov	r18, r24
 69a:	30 e0       	ldi	r19, 0x00	; 0
 69c:	f9 01       	movw	r30, r18
 69e:	e8 59       	subi	r30, 0x98	; 152
 6a0:	ff 4f       	sbci	r31, 0xFF	; 255
 6a2:	84 91       	lpm	r24, Z
 6a4:	f9 01       	movw	r30, r18
 6a6:	e4 58       	subi	r30, 0x84	; 132
 6a8:	ff 4f       	sbci	r31, 0xFF	; 255
 6aa:	d4 91       	lpm	r29, Z
 6ac:	f9 01       	movw	r30, r18
 6ae:	e0 57       	subi	r30, 0x70	; 112
 6b0:	ff 4f       	sbci	r31, 0xFF	; 255
 6b2:	c4 91       	lpm	r28, Z
 6b4:	cc 23       	and	r28, r28
 6b6:	91 f0       	breq	.+36     	; 0x6dc <digitalRead+0x48>
 6b8:	81 11       	cpse	r24, r1
 6ba:	0e 94 b6 02 	call	0x56c	; 0x56c <turnOffPWM>
 6be:	ec 2f       	mov	r30, r28
 6c0:	f0 e0       	ldi	r31, 0x00	; 0
 6c2:	ee 0f       	add	r30, r30
 6c4:	ff 1f       	adc	r31, r31
 6c6:	ec 55       	subi	r30, 0x5C	; 92
 6c8:	ff 4f       	sbci	r31, 0xFF	; 255
 6ca:	a5 91       	lpm	r26, Z+
 6cc:	b4 91       	lpm	r27, Z
 6ce:	ec 91       	ld	r30, X
 6d0:	ed 23       	and	r30, r29
 6d2:	81 e0       	ldi	r24, 0x01	; 1
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	21 f4       	brne	.+8      	; 0x6e0 <digitalRead+0x4c>
 6d8:	80 e0       	ldi	r24, 0x00	; 0
 6da:	02 c0       	rjmp	.+4      	; 0x6e0 <digitalRead+0x4c>
 6dc:	80 e0       	ldi	r24, 0x00	; 0
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	df 91       	pop	r29
 6e2:	cf 91       	pop	r28
 6e4:	08 95       	ret

000006e6 <yield>:
 6e6:	08 95       	ret

000006e8 <_exit>:
 6e8:	f8 94       	cli

000006ea <__stop_program>:
 6ea:	ff cf       	rjmp	.-2      	; 0x6ea <__stop_program>
